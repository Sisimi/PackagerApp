/*
 * Packager App backend API
 * Alábbiakban látható a Packager App-hoz használt adatbázis kezelő API leírása.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: tomi9994@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.NameValue;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ModelPackage
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-04-06T11:58:38.634+02:00")
public class ModelPackage {
  @SerializedName("id")
  private String id = null;

  @SerializedName("packageName")
  private String packageName = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("nameValueList")
  private List<NameValue> nameValueList = null;

  public ModelPackage id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ModelPackage packageName(String packageName) {
    this.packageName = packageName;
    return this;
  }

   /**
   * Get packageName
   * @return packageName
  **/
  @ApiModelProperty(value = "")
  public String getPackageName() {
    return packageName;
  }

  public void setPackageName(String packageName) {
    this.packageName = packageName;
  }

  public ModelPackage description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ModelPackage nameValueList(List<NameValue> nameValueList) {
    this.nameValueList = nameValueList;
    return this;
  }

  public ModelPackage addNameValueListItem(NameValue nameValueListItem) {
    if (this.nameValueList == null) {
      this.nameValueList = new ArrayList<NameValue>();
    }
    this.nameValueList.add(nameValueListItem);
    return this;
  }

   /**
   * Get nameValueList
   * @return nameValueList
  **/
  @ApiModelProperty(value = "")
  public List<NameValue> getNameValueList() {
    return nameValueList;
  }

  public void setNameValueList(List<NameValue> nameValueList) {
    this.nameValueList = nameValueList;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelPackage _package = (ModelPackage) o;
    return Objects.equals(this.id, _package.id) &&
        Objects.equals(this.packageName, _package.packageName) &&
        Objects.equals(this.description, _package.description) &&
        Objects.equals(this.nameValueList, _package.nameValueList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, packageName, description, nameValueList);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelPackage {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    packageName: ").append(toIndentedString(packageName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    nameValueList: ").append(toIndentedString(nameValueList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

